name: Test Release server

on: [workflow_dispatch, push]

jobs:
  ttttt:
    timeout-minutes: 120
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # - name: Install dependencies
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb -y
          
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          browser: chrome
          spec: cypress/e2e/login.cy.js
  #        env: URL=tenant1.release.company-policy.com, PASSWORD=${{secrets.RELEASE_PASSWORD}}, AUTHNAME='${{secrets.RELEASE_AUTHNAME}}', USERNAME=${{secrets.RELEASE_USERNAME}}, allure=true

        env: #PASSWORD=${{secrets.RELEASE_PASSWORD}}, URL=${{secrets.RELEASE_URL}}, AUTHNAME='${{secrets.RELEASE_AUTHNAME}}', USERNAME=${{secrets.RELEASE_USERNAME}}, allure=true
          CYPRESS_allure: true
        #   CYPRESS_USERNAME: ${{secrets.RELEASE_USERNAME}}
        #   CYPRESS_PASSWORD: ${{secrets.RELEASE_PASSWORD}}
          CYPRESS_URL: tenant1.release.company-policy.com 
          #${{secrets.RELEASE_URL}}
        #   URL: ${{secrets.RELEASE_URL}}
        #   CYPRESS_AUTHNAME: '${{secrets.RELEASE_AUTHNAME}}'
          
        #   env:  CYPRESS_DEBUG: allure-plugin*

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
#          gh_pages: gh-pages
          # github_run_num: "release"

      - name: FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@4.3.1
        if: always()
        with:
          server: allure.company-policy.com
          username: company-policy_1
          password: ${{ secrets.ftp_password }}
          local-dir: allure-report/
          server-dir: public_html/ttt/
          state-name: ../.ttt_ftp-deploy-sync-state.json


      # - name: Run Cypress
      #   continue-on-error: true
      #   run: |
      #     DEBUG=allure-plugin* PASSWORD=${{secrets.PRODUCTION_PASSWORD}} URL=${{secrets.PRODUCTION_URL}} AUTHNAME='${{secrets.PRODUCTION_AUTHNAME}}' USERNAME=${{secrets.PRODUCTION_USERNAME}} npx cypress run --env allure=true --browser chrome


      # - name: Get Allure history
      #   uses: actions/checkout@v2
      #   if: always()
      #   continue-on-error: true
      #   with:
      #     ref: allure
      #     path: allure
          
      # - name: mkdir
      #   run: mkdir prod

      # - name: Generate Allure Report
      #   uses: simple-elf/allure-report-action@master
      #   if: always()
      #   with:
      #     allure_results: allure-results
      #     gh_pages: allure
      #     allure_history: ./prod/tested2/

#      - name: Clear report allure-results
#        run: |
#          sudo chown -R $USER:$USER ${{ github.workspace }}
#          sudo npm run allure:clear
#
#      - name: Run Cypress
#        continue-on-error: true
#        run: |
#          DEBUG=allure-plugin* PASSWORD=${{secrets.RELEASE_PASSWORD}} URL=${{secrets.RELEASE_URL}} AUTHNAME='${{secrets.RELEASE_AUTHNAME}}' USERNAME=${{secrets.RELEASE_USERNAME}} npx cypress run --env allure=true --browser chrome
#
#      - name: Test marketplace action
#        uses: simple-elf/allure-report-action@master
#        if: always()
#        id: allure-report
#        with:
#          allure_results: allure-results
#          allure_report: allure-report
#          allure_history: ./allure-history/release

      # - name: Deploy to GitHub Pages
      #   id: deployment
      #   uses: JamesIves/github-pages-deploy-action@4.2.0
      #   with:
      #     branch: gh-pages
      #     folder: ./prod

      # - name: Show allure
      #   run: cat ./allure-history/index.html
