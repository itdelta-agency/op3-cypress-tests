import { ROUTES } from "./routes";

Cypress.Commands.add('login', (username = Cypress.env('email'), password = Cypress.env('password')) => {
    const hashCode = function (str) {
        str = "" + str;
        var hash = 0;
        for (var i = 0; i < str.length; i++) {
            var char = str.charCodeAt(i);
            hash = ((hash << 5) - hash) + char;
            hash = hash & hash; // Convert to 32bit integer
        }
        return hash;
    }

    cy.session([username, hashCode(password)], () => {
        cy.visit(Cypress.config('baseUrl') + 'login', { timeout: 10000 });

        cy.xpath("//input[@id='email']", { timeout: 10000 }).type(username);
        cy.xpath("//input[@id='password']", { timeout: 10000 }).type(password, { log: false });

        cy.xpath("//button[@type='submit']", { timeout: 10000 }).click();
        cy.wait(2000);
        cy.window().its('localStorage').invoke(`setItem`, 'tableFilterExpanded_/cp/admin/post', 'false')
        cy.window().its('localStorage').invoke(`setItem`, 'tableFilterExpanded_/st/admin/index', 'false')
    });

});

// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('resetAppState', () => {
    cy.clearCookies();
    cy.clearLocalStorage();
    cy.window().then((win) => {
        win.sessionStorage.clear();
    });
});

// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('checkTextPresence', (text) => {
    return cy.get('body').then(($body) => {
        return $body.text().includes(text);
    });
});

// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('admin', () => {
    cy.login();
    cy.visit('/')
    cy.visitAdmin();
    cy.wait(1000);
    cy.wait(1000);
});

// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('createAnswerForQuestion', (questionName) => {
    cy.wait(1500);
    cy.xpath("//span[text()='Add answer']").click();
    cy.wait(500);
    /* cy.xpath("(//div[text()='" + lName + "'])[1]") */
    // cy.xpath("(//button[text()='Save'])[2]").click();

    //  // cy.xpath("//*[text()='Create answer']").should('be.visible');
    cy.xpath("/html/body/div[2]/div/div/div[2]/div[2]/main/div/ul/li[6]/div[2]/div/div[1]/button").click();
    cy.xpath("/html/body/div[2]/div/div/div[2]/div[2]/main/div/ul/li[6]/div[2]/div/div[2]/input").type(questionName + ' answer');
    cy.xpath("(//button[@role='switch'])[2]").click();
    cy.xpath("(//button[text()='Save'])[1]").click();
    // cy.xpath("//p[text()='Success!']").should('be.visible');
});

// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('addAnswers', () => {

    cy.xpath("//span[text()='Add answer']").click();

    // cy.xpath("//input[@type='text']").type(Cypress.env('answer1'));
    // cy.xpath("(//button[@role='switch'])[1]").click();
    // cy.xpath("(//button[@role='switch'])[2]").click();
    // cy.xpath("//button[text()='Save']").click();


    cy.xpath("/html/body/div[2]/div/div/div[2]/div[2]/main/div/ul/li[5]/div[2]/div/div[1]/input").type(Cypress.env('answer1'));
    cy.xpath("//input[@type='checkbox']").click();
    cy.xpath("(//button[@role='switch'])[2]").click();
    cy.xpath("(//button[text()='Save'])[1]").click();

    cy.xpath("//span[text()='Add answer']").click();
    cy.xpath("/html/body/div[2]/div/div/div[2]/div[2]/main/div/ul/li[5]/div[2]/div/div[1]/input").type(Cypress.env('answer2'));
    cy.xpath("//input[@type='checkbox']").click();
    cy.xpath("(//button[text()='Save'])[1]").click();

    cy.xpath("//span[text()='Add answer']").click();
    cy.xpath("/html/body/div[2]/div/div/div[2]/div[2]/main/div/ul/li[5]/div[2]/div/div[1]/input").type(Cypress.env('answer3'));
    cy.xpath("//input[@type='checkbox']").click();
    cy.xpath("(//button[text()='Save'])[1]").click();

});

// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('question', (questionName, questionType) => {

    // cy.xpath("//div[@class='flex items-center cursor-pointer mb-3']").click();
    cy.xpath("//h2[text()='Add question']").click();

    // // cy.xpath("//*[text()=–°–æ–∑–¥–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞']").should('be.visible');
    cy.xpath("(//input[@type='text'])[1]").type(questionName);
    cy.xpath("(//input[@type='text'])[2]").type(questionName + questionType);

    cy.xpath("(//div[@role='radio'])[" + questionType + "]").click({ force: true });
    cy.xpath("(//div[@role='radio'])[" + questionType + "]").click({ force: true });

    questionType === 1 && cy.xpath("//button[@role='switch']").click();
    if (questionType !== 1) {
        cy.addAnswers();
        cy.xpath("//button[@role='switch']").click();
    }
    // cy.xpath("//input[@type='number']").type(10);
    cy.xpath("//button[text()='Save']").click();
    cy.wait(1500);
    cy.checkTextInParagraph();
});




Cypress.Commands.add('reliableType', (selector, text) => {
  cy.get(selector)
    .eq(0)
    .should('be.visible')
    .as('reliableInput');

  cy.get('@reliableInput')
    .clear();

  cy.wait(300);

  cy.get('@reliableInput')
    .type(text, { delay: 100 });

  cy.wait(300);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –≤–≤–æ–¥–∞
  cy.get('@reliableInput')
    .invoke('val')
    .then(val => {
      if (val !== text) {
        cy.log(`üîÅ –ü–µ—Ä–µ–≤–≤–æ–¥. –ë—ã–ª–æ: "${val}", –æ–∂–∏–¥–∞–ª–æ—Å—å: "${text}"`);

        // –ü–æ–≤—Ç–æ—Ä
        cy.get('@reliableInput').clear();
        cy.wait(300);
        cy.get('@reliableInput').type(text, { delay: 150 });

        // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (—Ç–æ–ª—å–∫–æ –ª–æ–≥)
        cy.get('@reliableInput').invoke('val').then(finalVal => {
          if (finalVal !== text) {
            cy.log(`‚ö†Ô∏è –ü–æ—Å–ª–µ –ø–æ–≤—Ç–æ—Ä–∞ –≤—Å—ë –µ—â—ë –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç: "${finalVal}"`);
            cy.task('logError', `–û–∂–∏–¥–∞–ª–æ—Å—å: "${text}", –Ω–æ –≤–≤–µ–¥–µ–Ω–æ: "${finalVal}"`);
          }
        });
      }
    });
});
// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('bulkAction', (actions, nameOrNames) => {
    const nameList = Array.isArray(nameOrNames) ? nameOrNames : [nameOrNames];

    // –ï—Å–ª–∏ –ø–∞–Ω–µ–ª—å –Ω–µ —Ä–∞—Å–∫—Ä—ã—Ç–∞ ‚Äî –∫–ª–∏–∫–∞–µ–º –ø–æ —Ç—É–ª—Ç–∏–ø—É
    cy.get('body').then($body => {
        if ($body.find('.mt-1.relative.flex').length === 0) {
            cy.xpath("//div[@class='tooltip']").click();
        }
    });

    actions.forEach(action => {
        // –û—Ç–º–µ—á–∞–µ–º —á–µ–∫–±–æ–∫—Å—ã –ø–æ –∫–∞–∂–¥–æ–º—É –∏–º–µ–Ω–∏ –æ—Ç–¥–µ–ª—å–Ω–æ

        nameList.forEach(name => {
            cy.wait(200);
            // –í–≤–æ–¥–∏–º –∏–º—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü—ã
            cy.get('input[placeholder="Search"]').eq(0)
                .should('be.visible')
                .clear();

            cy.wait(200); // –Ω–µ–±–æ–ª—å—à–æ–π —Ç–∞–π–º–∞—É—Ç –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ DOM

            cy.get('input[placeholder="Search"]').eq(0)
                .type(name, { delay: 100 });
            cy.wait(700); // –∂–¥–µ–º, —á—Ç–æ–±—ã —Ç–∞–±–ª–∏—Ü–∞ –æ–±–Ω–æ–≤–∏–ª–∞—Å—å

            // –û—Ç–º–µ—á–∞–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç —ç—Ç–æ –∏–º—è
            cy.get('tbody tr[role="row"]', { timeout: 5000 })
                .should('exist');
            cy.get('tbody tr[role="row"]')
                .filter(`:contains("${name}")`)
                .each($row => {
                    cy.wrap($row)
                        .find('input[type="checkbox"][title="Toggle Row Selected"]')
                        .check({ force: true });
                });
        });

        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
        cy.get('.z-10.flex')
            .filter((index, el) => Cypress.$(el).find('.css-19bb58m').length > 0)
            .first()
            .within(() => {
                cy.get('.css-19bb58m').should('be.visible').click();
            });

        // –í—ã–±–∏—Ä–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        cy.contains('div', action, { timeout: 5000 }).should('be.visible').click();

        // –ù–∞–∂–∏–º–∞–µ–º Apply
        cy.contains('button', 'Apply').should('be.visible').click();
        cy.wait(400);

        // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ, –µ—Å–ª–∏ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –º–æ–¥–∞–ª–∫–∞
        const confirmButtonText = action.toLowerCase() === 'delete' ? 'Delete' : 'OK';

        cy.get('body').then($body => {
            const $modal = $body.find('.bg-green-600, .bg-indigo-600');
            if ($modal.length > 0) {
                cy.wrap($modal).should('be.visible').contains(confirmButtonText).click();
            }
        });

        // –ñ–¥–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ø–æ—Å–ª–µ –¥–µ–π—Å—Ç–≤–∏—è
        cy.wait(700);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–º–µ–Ω–∏ –ø–æ—Å–ª–µ –¥–µ–π—Å—Ç–≤–∏—è
        nameList.forEach(name => {
            // –°–Ω–æ–≤–∞ —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ –∏–º–µ–Ω–∏
            cy.wait(300);

            cy.get('input[placeholder="Search"]').eq(0)
                .should('be.visible')
                .clear();

            cy.wait(300); // ‚è≥ –∂–¥—ë–º –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ ‚Äî —ç—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ

            cy.get('input[placeholder="Search"]').eq(0)
                .type(name, { delay: 100 });

            cy.wait(700);

            if (action.toLowerCase() === 'delete') {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞
                cy.contains(name, { timeout: 3000 }).should('not.exist');
            } else {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏ —Å —ç—Ç–∏–º –∏–º–µ–Ω–µ–º
                cy.get('tbody tr[role="row"]')
                    .filter(`:contains("${name}")`)
                    .each($row => {
                        cy.wrap($row).within(() => {
                            switch (action.toLowerCase()) {
                                case 'activate':
                                    cy.contains('span', 'Active', { timeout: 5000 })
                                        .should('exist')
                                        .wait(200); // –¥–æ–∂–∏–¥–∞–µ–º—Å—è –ø–æ—Å–ª–µ –ø–æ—è–≤–ª–µ–Ω–∏—è
                                    break;

                                case 'deactivate':
                                    cy.url().then(url => {
                                        const expectedStatus = url.includes(ROUTES.users) ? 'Blocked' : 'Inactive';
                                        cy.contains('span', expectedStatus, { timeout: 5000 })
                                            .should('exist')
                                            .wait(200); // —Ç–æ–∂–µ –∂–¥—ë–º –Ω–µ–º–Ω–æ–≥–æ –ø–æ—Å–ª–µ –ø–æ—è–≤–ª–µ–Ω–∏—è
                                    });
                                    break;

                                default:
                                    throw new Error(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–∞—Å—Å–æ–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: ${action}`);



                            }
                        });
                    });
            }
        });

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
        cy.get('body').then($body => {
            const $notify = $body.find('.bg-green-600, .bg-indigo-600');
            if ($notify.length > 0) {
                cy.wrap($notify).should('be.visible').then($el => {
                    cy.log('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:', $el.text().trim());
                });
            } else {
                cy.log('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å');
                cy.task('logError', `–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å`);
            }
        });
    });
});

// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('closePopup', () => {
    const isNonExistentOrHidden = ($el => Cypress.dom.isElement($el));

    cy.wait(1000);
    cy.contains("span", "Attention!").should(($el) => {
        if (!isNonExistentOrHidden($el)) {
            expect(isNonExistentOrHidden($el)).to.be.false
        }

    }).then((res) => {
        if (res.length) {
            cy.contains("span", "Attention!").parent().parent().next().find('button').click();
            cy.wait(500);
        }
    })
    cy.wait(1000)
});

// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('accessAllItems', () => {
    cy.wait(2000);
    // cy.xpath('(//button/span[starts-with(text(), \'Show\')])[last()]').click();
    cy.get('[data-test-id="pageCountButton"]').scrollIntoView().click();
    cy.wait(1000);
    cy.get('.font-normal.block').eq(3).click()
    cy.wait(1000);
});

// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('changeLang', (lang = 'ru') => {
    cy.get('[data-header-test-id="lang_button"]')
        .click()
        .then(() => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω—É–∂–Ω–æ–≥–æ —è–∑—ã–∫–∞
            cy.get('body').then($body => {
                if ($body.find(`[data-header-test-id="${lang}"]`).length > 0) {
                    cy.get(`[data-header-test-id="${lang}"]`).click();
                    cy.log(`–Ø–∑—ã–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω –Ω–∞ ${lang}`);
                    cy.task('logInfo', `–Ø–∑—ã–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω –Ω–∞ ${lang}`);
                } else {
                    cy.log(`–≠–ª–µ–º–µ–Ω—Ç –¥–ª—è —è–∑—ã–∫–∞ ${lang} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
                    cy.task('logError', `–≠–ª–µ–º–µ–Ω—Ç –¥–ª—è —è–∑—ã–∫–∞ ${lang} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
                }
            });
        });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —è–∑—ã–∫ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–º–µ–Ω–∏–ª—Å—è
    cy.get('[data-header-test-id="lang_button"] > span', { timeout: 7000 })
        .should('have.text', lang)
        .then(() => {
            cy.log(`–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ, —á—Ç–æ —è–∑—ã–∫ —Å–º–µ–Ω–∏–ª—Å—è –Ω–∞ ${lang}`);
            cy.task('logInfo', `–Ø–∑—ã–∫ —Å–º–µ–Ω–∏–ª—Å—è –Ω–∞ ${lang}!`);
        });
});

// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('changeLangAuth', () => {
    cy.xpath("/html/body/div[2]/div/nav/div/div/div[2]/div/div/button").click();
    cy.wait(500);
    cy.xpath("/html/body/div[2]/div/nav/div/div/div[2]/div/div").find('a').last().click();
    cy.wait(500);
})

// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('logout', () => {
    cy.wait(1500);
    cy.xpath("//button[@class='max-w-xs bg-white flex items-center text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 z-50']").click();
    cy.wait(500);
    cy.xpath("//a[@href='" + Cypress.config('baseUrl') + "logout']").click();
    cy.wait(1500);
});

// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('searchRow', (name) => {
    cy.log(`üîç –ü–æ–∏—Å–∫ —Å—Ç—Ä–æ–∫–∏ —Å –∏–º–µ–Ω–µ–º: "${name}"`);

    cy.task('logInfo', '–ü—Ä–æ–≤–µ—Ä–∫–∞, –≤–∫–ª—é—á–µ–Ω—ã –ª–∏ —Ñ–∏–ª—å—Ç—Ä—ã');
    cy.get('body').then($body => {
        if ($body.find('.mt-1.relative.flex').length === 0) {
            cy.task('logInfo', '–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —Ñ–∏–ª—å—Ç—Ä–∞.');
            cy.xpath("//div[@class='tooltip']").click();
        }
    });

    cy.get('[placeholder="Search"], [placeholder="–ü–æ–∏—Å–∫"]').first()
        .should('be.visible')
        .clear()
        .wait(100)
        .type(name, { delay: 100 });

    cy.wait(800); // –ø–æ–¥–æ–∂–¥–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Ç—Ä–æ–∫–∏, –∏ –ª–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    cy.get('tbody').then($tbody => {
        const rows = $tbody.find(`tr:contains("${name}")`);
        if (rows.length > 0) {
            cy.log(`–ù–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å –∏–º–µ–Ω–µ–º: "${name}"`);
            cy.task('logInfo', `–°—Ç—Ä–æ–∫–∞ —Å –∏–º–µ–Ω–µ–º "${name}" –Ω–∞–π–¥–µ–Ω–∞!`);
        } else {
            cy.log(`–°—Ç—Ä–æ–∫–∞ —Å –∏–º–µ–Ω–µ–º "${name}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
            cy.task('logError', `–°—Ç—Ä–æ–∫–∞ —Å –∏–º–µ–Ω–µ–º "${name}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!`);
        }
    });
});

// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('skipTests', (cookieName) => {
    if (Cypress.browser.isHeaded) {
        cy.clearCookie(cookieName)
    } else {
        cy.getCookie(cookieName).then(cookie => {
            if (
                cookie &&
                typeof cookie === 'object' &&
                cookie.value === 'true'
            ) {
                Cypress.runner.stop();
            }
        });
    }
});

// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('deleteAllByName', (name) => {
    function deleteOne() {
        return cy.get('tr').then($rows => {
            // –§–∏–ª—å—Ç—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –Ω—É–∂–Ω–æ–µ –∏–º—è
            const filtered = $rows.filter((i, el) => el.innerText.includes(name));

            if (filtered.length > 0) {
                const $row = Cypress.$(filtered[0]);

                cy.wrap($row).within(() => {
                    cy.get('button').first().click();               // –û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é
                    cy.contains('div', 'Delete').click();     // –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ Delete (–ª—é–±–æ–π, –≥–¥–µ –µ—Å—Ç—å —Å–ª–æ–≤–æ Delete)
                });

                // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
                cy.contains('button', 'Delete').click();

                // –ñ–¥–µ–º –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ —Å —ç—Ç–∏–º –∏–º–µ–Ω–µ–º
                return cy.get('tr')
                    .should('not.contain.text', name)
                    .then(() => deleteOne());  // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —É–¥–∞–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ
            } else {
                // –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫ –Ω–µ—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–µ–∫—É—Ä—Å–∏—é –∏ —Ç–µ—Å—Ç –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è
                return;
            }
        });
    }

    return deleteOne();
});


// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('whoCanSee', (tabs = ['Users', 'Departments', 'Teams', 'Others']) => {

    cy.task('logInfo', `–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º –ø–∞—Ä–≤ –¥–æ—Å—Ç—É–ø–∞`);
    const tabSearchValues = {
        'Users': 'first-name',
        'Departments': 'QA Department name',
        'Teams': 'Qa Test Team',
        'Others': 'All users',

    };
    cy.task('logInfo', '–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —Å–µ–ª–µ–∫—Ç');
    cy.get('.w-20.text-xs').click();
    cy.wait(500);
    cy.get('.bg-white.rounded-lg.px-4').then($el => {
        if ($el.is(':visible')) {
            // –û–∫–Ω–æ –≤–∏–¥–Ω–æ
            cy.log('–û–∫–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ');
        } else {
            // –û–∫–Ω–æ –Ω–µ –≤–∏–¥–Ω–æ ‚Äî –º–æ–∂–Ω–æ –∫–ª–∏–∫–Ω—É—Ç—å –µ—â—ë —Ä–∞–∑
            cy.get('.w-20.text-xs').click();
        }
    });


    Cypress._.each(tabs, (tab) => {
        cy.get('.-mb-px.flex', { timeout: 5000 }).then(($nav) => {
            if ($nav.find(`div:contains("${tab}")`).length > 0) {
                cy.wrap($nav).contains('div', tab).click();
                cy.wait(200);

                // –í–≤–æ–¥–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞
                cy.task('logInfo', '–ü–æ–∏—Å–∫.');
                cy.contains('div', 'Search')
                    .parent()
                    .find('input')
                    .clear()
                    .type(tabSearchValues[tab], { force: true });

                cy.wait(500); // –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å, —á—Ç–æ–±—ã —Å–ø–∏—Å–æ–∫ —É—Å–ø–µ–ª –æ–±–Ω–æ–≤–∏—Ç—å—Å—è

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω—É–∂–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ DOM
                cy.get('body').then($body => {
                    const selector = `div:contains("${tabSearchValues[tab]}")`;

                    if ($body.find(selector).length > 0) {
                        cy.contains('div', tabSearchValues[tab]).click({ force: true });
                        cy.wait(300);
                    } else {
                        cy.log(`–≠–ª–µ–º–µ–Ω—Ç "${tabSearchValues[tab]}" –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
                        cy.task('logInfo', '–¢–∞–∫–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞ –Ω–µ—Ç.');
                    }
                });

            } else {
                cy.log(`–í–∫–ª–∞–¥–∫–∞ "${tab}" –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
                cy.task('logInfo', '–í–∫–ª–∞–¥–∫–∏ –Ω–µ—Ç.');
            }
        });
    });

    // –ö–ª–∏–∫ –ø–æ "Save" / –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    cy.task('logInfo', '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.');
    cy.get('.mt-3.w-full').click();

    // –ü—Ä–æ–≤–µ—Ä–∫–∞: —á—Ç–æ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç –≤—ã–±—Ä–∞–Ω
    cy.get('.w-full.max-h-24')
        .children('li')
        .should('be.visible');
});

// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('ifRowExists', (name, callback) => {
    cy.get('body').then($body => {
        const row = $body.find(`tr:contains("${name}")`);

        if (row.length > 0) {
            cy.log(`–°—Ç—Ä–æ–∫–∞ —Å –∏–º–µ–Ω–µ–º "${name}" –Ω–∞–π–¥–µ–Ω–∞`);
            cy.task('logInfo', '–°—Ç—Ä–æ–∫–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞–π–¥–µ–Ω–∞!');
            callback(); // –≤—ã–∑—ã–≤–∞–µ–º —Ç–≤–æ–π –∫–æ–¥
        } else {
            cy.log(`–°—Ç—Ä–æ–∫–∞ —Å –∏–º–µ–Ω–µ–º "${name}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ‚Äî —Ç–µ—Å—Ç –ø—Ä–æ–ø—É—â–µ–Ω`);
            cy.task('logError', '–°—Ç—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
        }
    });
});

// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('logTestName', function () {
    const testName = this.currentTest.title;
    cy.task('logInfo', `========== –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: ${testName} ==========`);
});

// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('deleteResources', (name) => {
    const deleteNext = () => {
        cy.wait(800); // –¥–∞—Ç—å –≤—Ä–µ–º–µ–Ω–∏ DOM –æ–±–Ω–æ–≤–∏—Ç—å—Å—è
        cy.get('body').then($body => {
            const $row = $body.find('tr').filter((_, el) =>
                el.innerText.includes(name)
            ).first();

            if ($row.length === 0) {
                cy.log(`–í—Å–µ —Å—Ç—Ä–æ–∫–∏ —Å –∏–º–µ–Ω–µ–º "${name}" —É–¥–∞–ª–µ–Ω—ã`);
                cy.task('logInfo', `–í—Å–µ —Å—Ç—Ä–æ–∫–∏ —Å –∏–º–µ–Ω–µ–º "${name}" —É–¥–∞–ª–µ–Ω—ã`);
                return;
            }

            cy.wrap($row).find('.p-2.rounded-full').click();
            cy.contains('div', /delete\s*/i).click();
            cy.wait(200);
            cy.get('.sm\\:col-start-3').click();
            cy.task('logInfo', '–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!');
            // –ñ–¥—ë–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è DOM –∏ –≤—ã–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é
            cy.wait(1000).then(() => {
                deleteNext();
            });
        });
    };

    deleteNext();
});

// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('checkTextInParagraph', (text = 'Success!', timeout = 3000) => {
    const start = Date.now();

    function check() {
        return cy.document().then((doc) => {
            const el = doc.querySelector("p");
            if (el && el.textContent.includes(text)) {
                cy.task('logInfo', `–≠–ª–µ–º–µ–Ω—Ç —Å —Ç–µ–∫—Å—Ç–æ–º "${text}" –Ω–∞–π–¥–µ–Ω`);
                return;
            }

            if (Date.now() - start > timeout) {
                cy.task('logInfo', `–≠–ª–µ–º–µ–Ω—Ç —Å —Ç–µ–∫—Å—Ç–æ–º "${text}" –Ω–µ –Ω–∞–π–¥–µ–Ω –∑–∞ ${timeout} –º—Å`);
                return;
            }
            return Cypress.Promise.delay(500).then(check);
        });
    }

    return check();
});
// -----------------------------------------------------------------------------------------------------------------------

Cypress.Commands.add('visitAdmin', (user) => {
    cy.get("[data-header-test-id='header_menu_button']").click();
    cy.get("[data-header-test-id='header_dropdown_menu']").eq(1).click();
    cy.wait(1000)
})
